{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE9B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeI,OACQ,sBAAMC,SAVG,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACzCN,EAAc,MAKV,SAEA,uBACIO,KAAM,OACNC,MAAST,EACTU,SAnBU,SAACP,GACnBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXxB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAIrB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACpBf,KAAMkB,EACNL,SAAS,SAElB,CAACpB,IAGGqB,EDd0BK,CAAc1B,GAAvCoB,EAAR,EAAQA,QAAeP,EAAvB,EAAkBN,KAIlB,OACI,qCACI,oBAAIS,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACX,qBAAKA,UAAU,aAAf,SACKH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEZpBgB,EAAe,WAGxB,MAAoCzC,mBAAS,CAAC,eAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACD,6BAEK2C,EAAWnB,KAAK,SAAAT,GAAQ,OACP,cAAC,EAAD,CAEGA,SAAUA,GADLA,Y,MCrBzC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.21bfa895.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\nconst [inputValue, setInputValue] = useState('')\n\nconst handleInputChange = (e) => {\n        setInputValue(e.target.value)\n}\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n\n    if(inputValue.trim().length > 2){\n        setCategories( (cats) => [inputValue, ...cats] );\n        setInputValue('')\n    }\n}\n\n    return (\n            <form onSubmit={handleSubmit}> \n\n            <input \n                type =\"text\"\n                value = {inputValue}\n                onChange= {handleInputChange}\n            />\n            </form>\n    )\n\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=0RED5yXjEaCR5z8gccCaGgRSI2hDeKts`;\n\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => { \n        return {\n            id: img.id, \n            title: img.title,\n             url: img.images?.downsized_medium.url\n            }\n     })\n\n    return gifs ;\n\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport {useFetchGifs} from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n\n\n    const { loading , data:images} = useFetchGifs( category );\n\n    \n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\n             <div className=\"card-grid \">\n                { images.map(img => \n                    <GifGridItem \n                        key={img.id}\n                        {...img}\n                        /> \n                )}\n            </div> \n        \n        </>\n    )   \n}\n","import { useEffect } from \"react\";\nimport { useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then( imgs => setState({\n                data: imgs,\n                loading: false\n            })  );\n    }, [category]);\n\n\n    return state;\n}","import React from 'react';\nimport { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n// 0RED5yXjEaCR5z8gccCaGgRSI2hDeKts API KEY\n\nexport const GifExpertApp = () => {\n\n\n    const [categories, setCategories] = useState(['Dragonball'])\n\n    // const handleAdd = () => {\n\n    //     setCategories([  ...categories, 'Goku']);\n\n    // }\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr/>\n           <ol>\n               { \n                categories.map( category =>\n                                 <GifGrid \n                                    key={category}\n                                    category={category} />)\n               }\n           </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}